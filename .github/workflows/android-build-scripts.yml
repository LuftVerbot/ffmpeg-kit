name: android build scripts

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'

jobs:
  build-main-on-linux:
    name: android main on linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ndk-version: ['r23b-linux']
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: set up adopt jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: prerequisites
        run: ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --uninstall "cmake;3.10.2.4988404" "cmake;3.18.1"
      - name: set up android ndk
        run: |
          curl -s "https://storage.googleapis.com/android-build/builds/aosp-ndk-r25-release-linux-linux/12161346/ca7222ab71c8d5b8add70c147e6b14b8d05d64ea785766db4b1efe9f70eceba1/android-ndk-12161346-linux-x86_64.zip?GoogleAccessId=gcs-sign%40android-builds-project.google.com.iam.gserviceaccount.com&Expires=1748023355&Signature=OdoFFd%2FVUEnFT4FSczlLX%2FMZdq5Tp8rF%2BScnUNR0HaW9djcLKqbboOJthPlgkfCrr0py7HhmvDs9ZdssOUD5Y9jjrUv847gEALsD0R80UskPBbu%2FWeKaVo3mwnEkBCc55tVBJXk%2BdQ1CHBbat6WYi49JlZtjNXz9VvhI7Gmsz8KEQkouZni%2BTNhKTRQSXM5eNvKjcx3kLFBVoxr%2Fi14YYHqMSqa1INu7%2BN7LMVOK3WuX4b0pcN7KmnHZ00aEtM2z%2FYh9lSWC4ac7JkIzWlpBX3aQpDCl6K0DaGX%2Fds6UCjF6GH89IyFUDKUFc6aBp6NSzANpes5tTG%2BQ%2FDazzQNBLQ%3D%3D" -o ndk.zip
          unzip -q -o ndk.zip -d .ndk
          echo "ANDROID_NDK_ROOT=$PWD/.ndk/$(ls .ndk)" >> $GITHUB_ENV
      - name: install packages
        run: sudo apt-get install -y autoconf automake libtool pkg-config curl git doxygen nasm cmake gcc gperf texinfo yasm bison autogen wget autopoint meson ninja-build ragel groff gtk-doc-tools libtasn1-bin
      - name: run the build script
        run: ./android.sh -d --enable-android-media-codec --enable-android-zlib --enable-gmp --enable-gnutls
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: "ffmpeg-kit.arr"
          # A file, directory or wildcard pattern that describes what to upload
          path: android/ffmpeg-kit-android-lib/build/outputs/aar/
