name: android build scripts

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'

jobs:
  build-main-on-linux:
    name: android main on linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ndk-version: ['r23b-linux']
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: set up adopt jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: prerequisites
        run: ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --uninstall "cmake;3.10.2.4988404" "cmake;3.18.1"
      - name: set up android ndk
        run: |
          curl -s "https://storage.googleapis.com/android-build/builds/aosp-ndk-release-r23-linux-linux/12186248/38c84da1ab0dd31ea40c857d2c9ee77450d9d71d76e60ac2ccd33d379babc534/android-ndk-12186248-linux-x86_64.zip?GoogleAccessId=gcs-sign%40android-builds-project.google.com.iam.gserviceaccount.com&Expires=1747938945&Signature=hOXxBMB8od4%2BJk1%2FXI2%2FW2hXbTcmizk%2BFEe7RS1JSGCxgTWHlhls4Lw4cthVdAckVIABHBR8qtvz%2BCQMGW8hIck39uy4YMu8%2FBOhe%2F4l7YR0z7SW09%2FQsTXjF3OfzDJnq7zQrj%2Fuor3m%2BI0Agj2fN9NHY1yFACU6Yx%2F1BloB00q63ELHWIlyTjop6e%2BJ1xFX%2FS5auJBYGBGPD6sdXkfaVS%2BIf1igD32CCpD0moI47X6OuuWYZRUm6z81p%2FhCE1BxSIkev%2FMgc06Quq5iZrkxvBN5qGF5Brqg943dGTaELk4yqFC6S3JZB0N4k79ZnD2QmJlEAPyFnyK7Jy6K0bIPqQ%3D%3D&response-content-disposition=attachment" -o ndk.zip
          unzip -q -o ndk.zip -d .ndk
          echo "ANDROID_NDK_ROOT=$PWD/.ndk/$(ls .ndk)" >> $GITHUB_ENV
      - name: install packages
        run: sudo apt-get install -y autoconf automake libtool pkg-config curl git doxygen nasm cmake gcc gperf texinfo yasm bison autogen wget autopoint meson ninja-build ragel groff gtk-doc-tools libtasn1-bin
      - name: run the build script
        run: ./android.sh -d --enable-android-media-codec --enable-android-zlib --enable-gmp --enable-gnutls
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: "ffmpeg-kit.arr"
          # A file, directory or wildcard pattern that describes what to upload
          path: android/ffmpeg-kit-android-lib/build/outputs/aar/
